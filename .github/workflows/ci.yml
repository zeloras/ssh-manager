name: Test & Code Quality

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi

      - name: Lint with flake8
        run: |
          flake8 ssh_manager.py ssh_gui.py tests/

      - name: Check formatting with black
        run: |
          black --check ssh_manager.py ssh_gui.py tests/

      - name: Type check with mypy
        run: |
          mypy ssh_manager.py ssh_gui.py

      - name: Security checks
        run: |
          bandit -r ssh_manager.py ssh_gui.py -ll
          safety check

      - name: Run unit tests
        run: |
          python -m pytest tests/ -v --tb=short --junitxml=test-results.xml

      - name: Run coverage
        run: |
          python -m pytest tests/ --cov=. --cov-report=xml --cov-report=term

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            test-results.xml
            coverage.xml
          retention-days: 30

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
